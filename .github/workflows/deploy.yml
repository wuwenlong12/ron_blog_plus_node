name: Build and Deploy Backend

on:
  push:
    branches:
      - main # 监视推送到主分支的操作

jobs:
  build:
    runs-on: ubuntu-latest # 使用 GitHub 提供的 Ubuntu 虚拟机

    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. 设置 Node.js 环境
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18" # 设置 Node.js 版本

      # 3. 设置 pnpm
      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: "8" # 设置 pnpm 版本

      # 4. 安装依赖
      - name: Install dependencies
        run: pnpm install # 使用 pnpm 安装依赖

      # 5. 构建项目
      - name: Build the project
        run: pnpm run build # 使用 pnpm 构建 TypeScript 项目

      # 6. 登录到阿里云 Docker Registry
      - name: Log in to Aliyun Docker Registry
        env:
          ALIYUN_PASSWORD: ${{ secrets.ALIYUN_PASSWORD }} # 从 GitHub Secrets 中获取部署目标目录 
        run: docker login --username=aliyun7228868842 --password=${{ secrets.ALIYUN_PASSWORD }} crpi-995uocus6og9mdf4.cn-beijing.personal.cr.aliyuncs.com # 使用阿里云账号和密码登录

      # 7. 构建 Docker 镜像
      - name: Build Docker image
        run: docker build -t crpi-995uocus6og9mdf4.cn-beijing.personal.cr.aliyuncs.com/wuwenlong797/docker:latest .  # 使用阿里云镜像仓库的地址来构建镜像

      # 8. 推送 Docker 镜像到阿里云 Docker Registry
      - name: Push Docker image
        run: docker push crpi-995uocus6og9mdf4.cn-beijing.personal.cr.aliyuncs.com/wuwenlong797/docker:latest  # 将镜像推送到阿里云 Docker Registry

      # 9. 设置 SSH 密钥
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }} # 从 GitHub Secrets 中获取 SSH 私钥

      # 10. 添加服务器的 SSH 公钥到 known_hosts
      - name: Add server to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts  # 获取并添加服务器公钥

      # 11. 上传项目文件到服务器
      - name: Deploy to server
        env:
          SERVER_USER: ${{ secrets.SERVER_USER }} # 从 GitHub Secrets 中获取服务器用户名
          SERVER_HOST: ${{ secrets.SERVER_HOST }} # 从 GitHub Secrets 中获取服务器 IP 地址
          DEPLOY_DIR: ${{ secrets.DEPLOY_DIR }} # 从 GitHub Secrets 中获取部署目标目录
        run: |
          echo "Uploading project to server..."
          rsync -avz --exclude=".git" --exclude="node_modules" --exclude="dist" ./ $SERVER_USER@$SERVER_HOST:$DEPLOY_DIR

      # 12. 在服务器上拉取并启动 Docker 镜像。
      - name: Pull and run Docker container on server
        env:
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          DEPLOY_DIR: ${{ secrets.DEPLOY_DIR }}
        run: |
          ssh $SERVER_USER@$SERVER_HOST "bash -c '
            cd $DEPLOY_DIR &&
            # 拉取最新的 Docker 镜像
            docker pull crpi-995uocus6og9mdf4.cn-beijing.personal.cr.aliyuncs.com/wuwenlong797/docker:latest &&
            # 停止并删除之前的容器
            docker-compose down &&
            # 启动新服务
            docker-compose up -d --build
          '"